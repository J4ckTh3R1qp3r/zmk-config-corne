/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&led_strip {
    chain-length = <27>;
};

&nice_view_spi {
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

/ {
    chosen {
        zmk,battery = &vbatt;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "VBATT";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp LEFT_ALT  &kp Q  &kp W  &kp E                              &kp R  &kp T          &kp Y    &kp U  &kp I       &kp O    &kp P     &kp BSPC
&kp LSHIFT    &kp A  &kp S  &kp D                              &kp F  &kp G          &kp H    &kp J  &kp K       &kp L    &kp SEMI  &kp SQT
&kp LGUI      &kp Z  &kp X  &kp C                              &kp V  &kp B          &kp N    &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp DELETE
                            &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS  &mo 2  &lt 1 SPACE    &kp RET  &mo 2  &kp K_MUTE
            >;

            sensor-bindings =
                <&inc_dec_kp LC(LEFT_ARROW) LC(RIGHT_ARROW)>,
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LALT   &kp NUMBER_7  &kp N8        &kp N9        &kp NUMBER_0    &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT    &kp RG(C_AL_LOCK)  &trans
&trans  &kp LSHFT  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_MINUS    &kp SQT        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND  &kp DOLLAR         &trans
&trans  &kp LCTRL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_PLUS     &kp UNDER      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SEMICOLON  &kp LG(SPACE)      &trans
                                 &trans        &trans        &trans          &trans         &trans                &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &kp ESCAPE      &kp UP_ARROW    &trans           &kp BACKSPACE        &bt BT_CLR         &trans            &bt BT_PRV         &bt BT_NXT       &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans               &trans             &kp K_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &ext_power EP_TOG    &ext_power EP_TOG  &kp C_PLAY_PAUSE  &kp C_PREVIOUS     &kp C_NEXT       &trans  &trans
                                &trans          &trans           &trans               &trans             &trans            &trans
            >;
        };
    };
};
